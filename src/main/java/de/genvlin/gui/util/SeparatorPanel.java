/*
 * SeparatorPanel.java
 *
 * Created on 13. MÃ¤rz 2006, 16:10
 *
 * genvlin project.
 * Copyright (C) 2005, 2006 Peter Karich.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation;
 * version 2.1 of the License.
 *
 * This project is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * or look at http://www.gnu.org
 */

package de.genvlin.gui.util;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ResourceBundle;
import javax.swing.ButtonModel;
import javax.swing.JRadioButton;

/**
 *
 * @author  peter
 */
public class SeparatorPanel extends javax.swing.JPanel
        implements ActionListener, KeyListener {
    static final public String TAB="\\t";
    static final public String NEW_LINE="\\n";
    static final public String SPACE=" ";
    
    static private String userDefined=";";
    
    private ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/genvlin/gui/util/Bundle");
    private String tabString = bundle.getString("CTL_TAB");
    private String newLineString = bundle.getString("CTL_NEW_LINE");
    private String spaceString = bundle.getString("CTL_SPACE");
    private String userDefinedString = bundle.getString("CTL_USERDEFINED");
    
    
    private String retValue;
    
    /** Creates new form SeparatorPanel */
    public SeparatorPanel() {
        this(userDefined);
    }
    
    /** Creates new form SeparatorPanel */
    public SeparatorPanel(String preSelect) {
        initComponents();
        
        if(preSelect.equals(TAB)) {
            setReturnValue(TAB);
            tabRadioButton.setSelected(true);
        } else if(preSelect.equals(NEW_LINE)) {
            setReturnValue(NEW_LINE);
            newLineRadioButton.setSelected(true);
        } else if(preSelect.equals(SPACE)) {
            setReturnValue(SPACE);
            spaceRadioButton.setSelected(true);
        } else {
            setReturnValue(userDefined);
            userDefinedRadioButton.setSelected(true);
        }
        
        initRadioButton(tabRadioButton);
        initRadioButton(newLineRadioButton);
        initRadioButton(spaceRadioButton);
        initRadioButton(userDefinedRadioButton);
    }
    
    String getTabString() {
        return tabString;
    }
    
    public void initRadioButton(JRadioButton rb) {
        rb.setActionCommand(rb.getText());
        rb.addActionListener(this);
        buttonGroup.add(rb);
    }
    
    private String getUserDefined() {
        return textField.getText();
    }
    
    public void setReturnValue(String s) {
        retValue = s;
    }
    
    public String getReturnValue() {
        return retValue;
    }
    
    public void actionPerformed(ActionEvent e) {
        ButtonModel selected = buttonGroup.getSelection();
        
        if (selected != null) {
            String s = selected.getActionCommand();
            
            if(s.equals(tabString)) setReturnValue(TAB);
            else if(s.equals(spaceString)) setReturnValue(SPACE);
            else if(s.equals(newLineString)) setReturnValue(NEW_LINE);
            else if(s.equals(userDefinedString))
                setReturnValue(getUserDefined());
            
        }
        
        //dialog:setVisible(false);
    }
    
    /*
    private void initUserDefinedReturnValue()
    {
        returnValue = textField.getText();//exlusive \n ?? yes!
     
        //the user could write TABSPACE... and we will convert these things..
        for(int i=0; i < visibleStr.length-1; i++)
        {
            returnValue.replaceAll(visibleStr[i], optionsStr[i]);
        }
     
    }*/
    
    public void keyPressed(KeyEvent e) {
    }
    public void keyReleased(KeyEvent e) {
        if(e.getComponent().equals(textField)) {
            setReturnValue(getUserDefined());
        }
    }
    public void keyTyped(KeyEvent e) {
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        buttonGroup = new javax.swing.ButtonGroup();
        tabRadioButton = new javax.swing.JRadioButton();
        spaceRadioButton = new javax.swing.JRadioButton();
        newLineRadioButton = new javax.swing.JRadioButton();
        userDefinedRadioButton = new javax.swing.JRadioButton();
        textField = new javax.swing.JTextField();

        tabRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        tabRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tabRadioButton.setText(tabString);

        spaceRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        spaceRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        spaceRadioButton.setText(spaceString);

        newLineRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        newLineRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        newLineRadioButton.setText(newLineString);

        userDefinedRadioButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        userDefinedRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        userDefinedRadioButton.setText(userDefinedString);

        textField.setText(userDefined);
        textField.addKeyListener(this);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(userDefinedRadioButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(textField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                    .add(tabRadioButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .add(spaceRadioButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                    .add(newLineRadioButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {newLineRadioButton, spaceRadioButton, tabRadioButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(tabRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(spaceRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(newLineRadioButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(userDefinedRadioButton)
                    .add(textField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {newLineRadioButton, spaceRadioButton, tabRadioButton, textField, userDefinedRadioButton}, org.jdesktop.layout.GroupLayout.VERTICAL);

    }// </editor-fold>//GEN-END:initComponents
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JRadioButton newLineRadioButton;
    private javax.swing.JRadioButton spaceRadioButton;
    private javax.swing.JRadioButton tabRadioButton;
    private javax.swing.JTextField textField;
    private javax.swing.JRadioButton userDefinedRadioButton;
    // End of variables declaration//GEN-END:variables
    
}
